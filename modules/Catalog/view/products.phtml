<script>
    require(["basket"],  function (basket) {  });
</script>

<input type="hidden" name="is_search" value="{{ is_search }}">
<input type="hidden" name="search_text" value="{{ search_text }}">

{% if(product) %}
    <div>
        {{ product.products_name }}
        <input type="hidden" name="products_id" value="{{ product.products_id }}">
    </div>

{% elseif(products) %}




    {{ widget('catalog','manufacturer',{'категория':categories_id,'manufacturers_id':manufacturers_id,'продукты':products_ids, 'порядок_сортировки':order, 'фильтры':actual_filters, 'поисковая_фраза':search_text}) }}


<script>
    // TODO вынести код фильтров в отдельный модуль
    // require(["filters"], function($, notify) {});

    require(["jquery", "bluz.notify"], function($, notify) {


        // FIXME Это работает, но не ясно, по какой схеме. Иногда выскакивает, редко.
        // notify.addError("error")

        // Очистка галочек
        var filter_orogin_init_val = $("form[name=state] input[name=filter-origin]").val();
        if(filter_orogin_init_val == "" || filter_orogin_init_val == undefined) $("input[type=checkbox].filter-origin").prop("checked",false);

        $("input[type=checkbox].filter-origin").off().on("click",function(event, data, textStatus, jqXHR){

            var setChecked = false
            var checkbox = $(this)
            var data_id = $(this).attr("data-id")
            var filter_origin = $("form[name=state] input[name=filter-origin]").val();

            var Re  = new RegExp(   data_id  );
            var Re1 = new RegExp( "^" + data_id + ",");
            var Re2 = new RegExp( "," + data_id + "$");
            var Re3 = new RegExp( "," + data_id + "," );

            //var filter_subcategory = $("form[name=state] input.filter-subcategory").val();

            if(filter_origin == ""){
                if( $(this).prop("checked") ){
                    filter_origin = $(this).attr("data-id")
                    $("form[name=state] input[name=filter-origin]").val(filter_origin);
                    setChecked = true
                } else {
                    return false;
                }

            } else {

                if( $(this).prop("checked") ){
                    if( Re1.test(filter_origin) || Re2.test(filter_origin) || Re3.test(filter_origin) || filter_origin == data_id ){
                        // "не дописывать, т.к. уже в списке
                        $(".filter-origin").prop("checked",true) // FIXME не выставляет галочку
                        return false
                    } else {
                        // дописать id, если его не было в списке
                        /// console.log("дописать")

                        filter_origin = filter_origin + "," + data_id
                        $("form[name=state] input[name=filter-origin]").val(filter_origin);

                        setChecked = true
                    }
                } else {
                    if( Re.test(filter_origin) ){
                        // убрать id, если он в списке
                        if(filter_origin == $(this).attr("data-id")){
                            $("form[name=state] input[name=filter-origin]").val("")
                        } else {

                            //Re = new RegExp( "^" + data_id + ",");
                            if( Re1.test(filter_origin) ){ // в начале строки
                                filter_origin = filter_origin.replace(Re1,"")
                            } else {
                                // Re = new RegExp( "," + data_id + "$")
                                if( Re2.test(filter_origin) ) { // в конце строки
                                    filter_origin = filter_origin.replace(Re2,"")
                                } else {
                                    // Re = new RegExp( "," + data_id + "," )
                                    if( Re3.test(filter_origin) )  // в середине
                                        filter_origin = filter_origin.replace(Re3,",")
                                }
                            }

                            if( filter_origin.substr(-1) == "," )
                                filter_origin = filter_origin.replace(/,$/,"")

                            $("form[name=state] input[name=filter-origin]").val(filter_origin)
                        }

                        setChecked = false
                    } else {
                        // не в списке
                        // FIXME не снимается флажок
                        $(".filter-origin").prop("checked",false)
                        return false;
                    }
                }

                //filter_origin = filter_origin + "," + $(this).attr("data-id")
            }

            //$("form[name=state] input[name=filter-origin]").val(filter_origin);


            var data = {}
            var state = $("form[name=state]").serialize();
            var is_search = $("input[name=is_search]").val()
            var url = "catalog/products" + "?" + state

            if(is_search == 1){
                url = "поиск/" + $("input[name=search_text]").val() + "?" + state;
                //var manufacturers_id = $("form[name=state] input[name=filter-manufacturers_id]").val()
                //data["manufacturers_id"] = manufacturers_id.substring(3)
            }

            $.ajax({
                type: "POST",
                data: data,
                url: url,
                context: document.body,
                cache: false,
                dataType: "html"
            }).done(function(response,status,responseObj) {
                    if(status == "success"){
                        if(responseObj.status != 200){
                            notify.addError("Error 404")
                        }

                        $("#content_box").html(response)

                        //$(".filter-origin").prop("checked",setChecked)
                        //$(checkbox).prop("checked",setChecked)
                    }
                });

            return true;
        });

        //

        $("a.filter-price-order").off().on("click",function(event, data, textStatus, jqXHR){

            var direction = $(this).attr("direction")
            var default_order_field =  $("form[name=state] input[name=default_order_field]").val()

            $("form[name=state] input[name=order]").val(direction + "-" + default_order_field)

            var state = $("form[name=state]").serialize();

            var data = {}

            data["direction"] = direction; //?

            var url = $(this).attr("href") + "?" + state;
            //url = "catalog/products" + "?" + state + "&noCache="  + (new Date().getTime()) + Math.random()

            var is_search = $("input[name=is_search]").val()

            if(is_search == 1){
                var text = $("input[name=search_text]").val()
                url = "поиск/" + text + "?" + state;
                var manufacturers_id = $("form[name=state] input[name=filter-manufacturers_id]").val()
                data["manufacturers_id"] = manufacturers_id.substring(3)
            }

            $.ajax({
                type: "get",
                data: data,
                url: url,
                context: document.body,
                dataType: "html",
                cache: false,
                async : false
            }).done(function(response,status,responseObj) {
                    $( this ).addClass( "done" );
                    if(status == "success"){

                        if(responseObj.status != 200){
                            notify.addError("Error 404")
                        }

                        $("#content_box").html(response)
                        //$("#content_box").html($(response).children().unwrap())
                    }
                });

            return false;
        });

        $("a.filter-vendor").off().on("click",function(event, data, textStatus, jqXHR){

            var data = {}

            //data = $("form[name=state]").serialize();

            data["uri"] = window.location.href;
            data["manufacturers_id"] =  $(this).attr("manufacturers_id");
            data["категория"] = $(this).attr("categories_id");

            $("form[name=state] input[name=filter-manufacturers_id]").val("eq-" + data["manufacturers_id"]);
            $("form[name=state] input[name=filter-categories_id]").val("eq-" + data["категория"]);

            var state = $("form[name=state]").serialize();
            var url = $(this).attr("href") + "?" + state;
            var is_search = $("input[name=is_search]").val()

            if(is_search == 1){
                var text = $("input[name=search_text]").val()
                url = "поиск/" + text + "?" + state;
            }

            $.ajax({
                type: "POST",
                data: data,
                url: url,
                context: document.body,
                dataType: "html"
            }).done(function(response,status,responseObj) {
                    $( this ).addClass( "done" );
                    if(status == "success"){
                        /*
                         // responseObj.responseText - is response
                         if(response.response == "ok"){
                         // console.log("ок")
                         // var $div = bluz_ajax.createModal("content") // не работает
                         } else {
                         // console.log("Ошибка данных")
                         }
                         */

                        if(responseObj.status != 200){
                            notify.addError("Error 404")
                        }

                        //articles_frame_counter = $("input[name=articles_frame_counter]").val();
                        //articles_frame_counter++;
                        //$("input[name=articles_frame_counter]").val(articles_frame_counter)

                        //console.log(response)

                        $("#content_box").html(response)
                    }
                });
            return false;
        });
    });
</script>


<div class="wrapper-goods">

    {% for product in products %}

        <div class="goods">
            {% if( category_parent ) %} {% set parent = '/' ~ category_parent  %}
            {% else %} {% set parent = '' %} {% endif %}

            {% if( product.products_seo_page_name ) %} {% set product_link =   product.products_seo_page_name  %}
            {% else %} {% set product_link = product.products_id %} {% endif %}


            {#<div class="name">{{ ahref(  product.products_name, ['каталог' ~ parent ~ '/' ~ category_name, product_link]) }}</div>#}
            <div class="name">{{  product.products_name }}</div>
            <div class="image-box">
                {%  if( product.image_small ) %}
                    <img src="{{ product.image_small }}">
                {% else %}
                    <img src="{{ baseUrl('public/images/stumb.jpg') }}">
                {% endif %}
            </div>
            <div class="description">
                <div class="weight">{{ product.products_unit }}</div>
                <div class="cost">{{ product.products_shoppingcart_price|round(2, 'ceil') }}</div>
                <div class="basket"><a href="JavaScript:void(0);" data-href="ajax/modify_basket" class="push-to-basket" >В корзину</a></div>
                <div class="number-arrow">
                    <a class="dec" href="JavaScript:void(0);" data-href=""><img src="public/images/arrow-dec.png"></a>
                    <input type="number" min="1" value="1" class="num">
                    <a class="inc" href="JavaScript:void(0);" data-href=""><img src="public/images/arrow-inc.png"></a>
                </div>
                <div class="price">{{ product.products_shoppingcart_price|round(2, 'ceil') }}</div>
            </div>

            <input type="hidden" name="products_id" value="{{ product.products_id }}">
            <input type="hidden" name="products_barcode" value="{{ product.products_barcode }}">
            <input type="hidden" name="products_name" value="{{ product.products_name }}">
            <input type="hidden" name="products_unit" value="{{ product.products_unit }}">
            <input type="hidden" name="products_departament" value="{{ product.products_departament }}">
            <input type="hidden" name="products_shoppingcart_price" value="{{ product.products_shoppingcart_price }}">
            <input type="hidden" name="products_quantity" value="{{ product.products_quantity }}">
            {# <input type="hidden" name="products_price" value="{{ product.products_price }}"> #}



        </div>

    {% endfor %}
</div>
{% endif %}


